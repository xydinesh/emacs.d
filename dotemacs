;; turn on syntax highlighting
(global-font-lock-mode t)

;;Make sure spaces are used when indenting code
(setq-default indent-tabs-mode nil)

;; enable visual feedback on selections
(setq-default transient-mark-mode t)

;; always end a file with a newline
(setq require-final-newline t)

;; stop at the end of the file, not just add lines
(setq next-line-add-newlines t)

;;disable audiable bell
(setq visible-bell t)

;;(display-time)
;;(setq display-time-format "%a, %d. %b %Y %R")

;;column number
(setq column-number-mode t)

;;paren mode
(setq show-paren-mode t)

;;(setq lpr-command "lp")
;;(setq lpr-switches '("-d"))
;;(setq printer-name "deskjet_3900")

;;Menubar off
(setq menu-bar-mode t)

;;==============================================================================
(global-set-key [delete] 'delete-char)
(global-set-key [kp-delete] 'delete-char)
(global-set-key [\d] 'delete-char)

;;goint to define window manipulation
;;(global-set-key  [f2]  'dictionary-search)
(global-set-key  [f2] 'server-edit)
(global-set-key  [f3]  'call-last-kbd-macro)
(global-set-key  [f4]  'ds)

(global-set-key  [f5]  'enlarge-window)
(global-set-key  [f6]  'shrink-window)
(global-set-key  [f7]  'enlarge-window-horizontally)
(global-set-key  [f8]  'shrink-window-horizontally)

(global-set-key  [f9]  'compile)
(global-set-key  [f10]  'other-window)
(global-set-key  [f12]  'pep8)


(global-set-key [(shift f8)] 'uncomment-region)
(global-set-key [(shift f9)] 'cscope-find-global-definition)
(global-set-key [(shift f10)] 'cscope-find-functions-calling-this-function)
(global-set-key [(shift f11)] 'cscope-find-called-functions)
(global-set-key [(shift f12)] 'cscope-find-files-including-file)

;;kbd macro
(fset 'ds
      "$\C-f$")

(fset 'csc_global_def
      [S-f9 return f10 ?\C-x ?1 ?\C-x ?\C-u])


(global-set-key "\M-g" 'goto-line)
(global-set-key "\C-w" 'backward-kill-word)
(global-set-key "\M-?" 'help-command)
(global-set-key "\C-?" 'help-command)
(global-set-key "\C-h" 'delete-backward-char)

(global-set-key "\C-xt" 'transpose-line)
(global-set-key "\C-ci" 'insert-kbd-macro)
(global-set-key "\C-cp" 'show-paren-mode)
(global-set-key "\C-h" 'delete-backward-char)

(global-set-key "\C-x\C-m" 'execute-extended-command)
(global-set-key "\C-c\C-m" 'execute-extended-command)
(global-set-key "\C-x\C-k" 'kill-region)
(global-set-key "\C-c\C-k" 'kill-region)

(add-hook 'c-mode-common-hook 'turn-on-auto-fill)
(add-hook 'cperl-mode-hook 'turn-on-auto-fill)
(add-hook 'text-mode-hook 'turn-on-auto-fill)
;;=============================================================================
(defun line-to-top ()
  "current line to top of the window"
  (interactive)
  (recenter 0))

(defun scroll-one-line-up ()
  "scrolling one line up "
  (interactive)
  (scroll-up 1))

(defun scroll-one-line-down ()
  "scrolling one line up "
  (interactive)
  (scroll-down 1))

(fset 'imp
      "\C-e\C-?impl_t *)")

(fset 'comm
      "\C-m\C-i\C-['\C-['\C-?\"\"\"\C-m\"\"\"\C-i\C-p\C-m\C-i\C-x\C-s")


(global-set-key "\C-x\C-u" 'line-to-top)
(global-set-key "\M-j" 'scroll-one-line-up)
(global-set-key "\M-u" 'scroll-one-line-down)
(global-set-key "\M-i" 'comm)
(add-hook 'LaTeX-mode-hook 'flyspell-mode)


;; Python development configurations.

(let ((default-directory "~/.emacs.d/"))
  (normal-top-level-add-subdirs-to-load-path))

;; Auto complete and pymacs
;;http://stackoverflow.com/questions/2855378/ropemacs-usage-tutorial
(autoload 'python-mode "python-mode" "Python Mode." t)
(add-to-list 'auto-mode-alist '("\\.py\\'" . python-mode))
(add-to-list 'interpreter-mode-alist '("python" . python-mode))
(require 'python-mode)
(autoload 'pymacs-apply "pymacs")
(autoload 'pymacs-call "pymacs")
(autoload 'pymacs-eval "pymacs" nil t)
(autoload 'pymacs-exec "pymacs" nil t)
(autoload 'pymacs-load "pymacs" nil t)
(pymacs-load "ropemacs" "rope-")

(setq ropemacs-enable-autoimport t)
(require 'auto-complete)
(global-auto-complete-mode t)

(add-hook 'python-mode-hook
          (lambda () (define-key python-mode-map (kbd "DEL") 'py-electric-backspace)))
(normal-erase-is-backspace-mode 0)
(setq python-check-command "pyflakes")
(require 'tramp)
(autoload 'python-pep8 "python-pep8")
(autoload 'pep8 "python-pep8")

(require 'ido)
(ido-mode t)

;; End Python development configurations.
;;~/.emacs.d/el-get
(require 'el-get)
(add-to-list 'el-get-recipe-path "~/emacs.d/el-get/recipes")
(setq el-get-verbose t)
(add-hook 'python-mode-hook 'jedi:setup)
